### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.carry
name: Carry
type: operation
namespace: microsoft.quantum.arithmetic
summary: Implementiert ein umkehrbares durchführen. Wenn ein in Qubit codiertes `carryIn` und zwei Summen in und codiert `summand1` `summand2` sind, berechnet das bitweise XOR von `carryIn` `summand1` und `summand2` im Qubit, `summand2` und die Überführung wird im Qubit-Element als XoReD `carryOut` festgestellt.
syntax: 'operation Carry (carryIn : Qubit, summand1 : Qubit, summand2 : Qubit, carryOut : Qubit) : Unit'
input:
  content: '(carryIn : Qubit, summand1 : Qubit, summand2 : Qubit, carryOut : Qubit)'
  types:
  - name: carryIn
    summary: Ein-in-Qubit.
    isPrimitive: true
    uid: Qubit
  - name: summand1
    summary: Erstes Summen-und Qubit-Wert.
    isPrimitive: true
    uid: Qubit
  - name: summand2
    summary: Zweites Summen-und Qubit-Wert, wird durch das untere Bit der Summe von `summand1` und ersetzt `summand2` .
    isPrimitive: true
    uid: Qubit
  - name: carryOut
    summary: "\"Qubit ausführen\" ist ein XoReD mit dem höheren Bit der Summe."
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: d0d3e71a4445f9523c8ad817857d2dec8c7c2c76
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91462957"

### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.carry
name: Carry
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: Implementiert ein umkehrbares durchführen. Wenn `carryIn` ein in Qubit codiertes und zwei Summen in `summand1` und `summand2`codiert sind, berechnet das bitweise XOR von `carryIn` `summand1` und `summand2` im Qubit `summand2` , und die Überführung wird im Qubit `carryOut`-Element als XoReD festgestellt.
syntax: 'operation Carry (carryIn : Qubit, summand1 : Qubit, summand2 : Qubit, carryOut : Qubit) : Unit'
input:
  content: '(carryIn : Qubit, summand1 : Qubit, summand2 : Qubit, carryOut : Qubit)'
  types:
  - name: carryIn
    summary: Ein-in-Qubit.
    isPrimitive: true
    uid: Qubit
  - name: summand1
    summary: Erstes Summen-und Qubit-Wert.
    isPrimitive: true
    uid: Qubit
  - name: summand2
    summary: Zweites Summen-und Qubit-Wert, wird durch das untere Bit der Summe `summand1` von `summand2`und ersetzt.
    isPrimitive: true
    uid: Qubit
  - name: carryOut
    summary: "\"Qubit ausführen\" ist ein XoReD mit dem höheren Bit der Summe."
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 3fa18b56fb242e76a88a23af02b3ebe7e5cc57d4
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82679848"

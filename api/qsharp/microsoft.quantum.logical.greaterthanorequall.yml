### YamlMime:QSharpType
uid: microsoft.quantum.logical.greaterthanorequall
name: GreaterThanOrEqualL
type: function
namespace: microsoft.quantum.logical
summary: Gibt nur dann true zurück, wenn eine Zahl größer als eine andere Zahl oder gleich einer anderen Zahl ist.
remarks: >-
  Die folgenden sind gleichwertig:


  ```Q#

  let cond = a >= b;

  let cond = GreaterThanOrEqualL(a, b);

  ```
syntax: 'function GreaterThanOrEqualL (a : BigInt, b : BigInt) : Bool'
input:
  content: '(a : BigInt, b : BigInt)'
  types:
  - name: a
    summary: Der erste zu vergleichende Wert.
    isPrimitive: true
    uid: BigInt
  - name: b
    summary: Der zweite zu vergleichende Wert.
    isPrimitive: true
    uid: BigInt
output:
  content: Bool
  types:
  - summary: '`true``a`, wenn größer als oder gleich ist `b` .'
    isPrimitive: true
    uid: Bool
metadata:
  ms.openlocfilehash: 077f9141d547dfffcc43cbdd5db9a68f22983212
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89345711"

### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusl
name: ModulusL
type: function
namespace: microsoft.quantum.math
summary: Berechnet den kanonischen Rückstand von `value` Modulo `modulus` .
remarks: 'Diese Funktion verhält sich unterschiedlich, wie sich der Operator `%` in c# verhält, und f #, da im Ergebnis immer eine positive ganze Zahl zwischen 0 und ist `modulus - 1` , auch wenn der Wert negativ ist.'
syntax: 'function ModulusL (value : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(value : BigInt, modulus : BigInt)'
  types:
  - name: value
    summary: Der Wert, von dem die Rückstände berechnet werden.
    isPrimitive: true
    uid: BigInt
  - name: modulus
    summary: Der Modulo, nach dem die Rückstände übernommen werden, muss positiv sein.
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - summary: Ganzzahliger $r $ zwischen 0 und `modulus - 1` so, dass `value - r` durch Modulo teilbar ist
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: 04dfee46752af759bc7d686b58bb6e9c3793c8d4
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89334015"

### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusl
name: ModulusL
type: function
namespace: Microsoft.Quantum.Math
summary: Berechnet den kanonischen Rückstand von `value` Modulo `modulus`.
remarks: 'Diese Funktion verhält sich unterschiedlich, wie `%` sich der Operator in c# verhält, und f #, da im Ergebnis immer eine positive ganze `modulus - 1`Zahl zwischen 0 und ist, auch wenn der Wert negativ ist.'
syntax: 'function ModulusL (value : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(value : BigInt, modulus : BigInt)'
  types:
  - name: value
    summary: Der Wert, von dem die Rückstände berechnet werden.
    isPrimitive: true
    uid: BigInt
  - name: modulus
    summary: Der Modulo, nach dem die Rückstände übernommen werden, muss positiv sein.
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - summary: Ganzzahliger $r $ zwischen `modulus - 1` 0 und `value - r` so, dass durch Modulo teilbar ist
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: c4a9403cc5c2bf62e43b5cc248fb9502f15818e8
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82686626"

### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.applyxorinplace
name: ApplyXorInPlace
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Wendet eine bitweise XOR-Operation zwischen einer klassischen Ganzzahl und einer ganzen Zahl an, die durch ein Register von Qubits dargestellt wird.


  Wendet `X` Vorgänge auf Qubits in einem Little-in-Register-Register auf der Grundlage von 1 Bits in einer ganzen Zahl an.


  Wir bezeichnen `value` von a und lassen y eine Ganzzahl ohne Vorzeichen sein, die in `target`codiert ist. dann führt `InPlaceXorLE` einen Vorgang aus, der von der folgenden Zuordnung bereitgestellt wird: $ \ket{y}\rightarrow \ket{y\oplus a} $, wobei $ \oplus $ der bitweise exklusive OR-Operator ist.
syntax: 'operation ApplyXorInPlace (value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: value
    summary: Eine Ganzzahl, bei der angenommen wird, dass Sie nicht negativ ist.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Ein Quantum-Register, das verwendet wird, um `value` in Little-in-ddian-Codierung zu speichern.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 9d3d837d92537cc5d51a80e8e1c83c230b7acc28
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76871174"

### YamlMime:QSharpType
uid: microsoft.quantum.arrays.partitioned
name: Partitioned
type: function
namespace: Microsoft.Quantum.Arrays
summary: Teilt ein Array in mehrere Teile auf.
examples: >-
  ```qsharp

  // The following returns [[1,5],[3],[7]];

  let split = Partitioned([2,1], [1,5,3,7]);

  ```
syntax: "function Partitioned (nElements : Int[], arr : 'T[]) : 'T[][]"
input:
  content: "(nElements : Int[], arr : 'T[])"
  types:
  - name: nElements
    summary: Anzahl von Elementen in jedem Teil des Arrays
    isArray: true
    isPrimitive: true
    uid: Int
  - name: arr
    summary: Eingabe Array, das aufgeteilt werden soll.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[][]"
  types:
  - summary: Mehrere Arrays, bei denen das erste Array der `nElements[0]` erste `arr` und das zweite Array das nächste `nElements[1]` von `arr` usw. ist. Das letzte Array enthält alle verbleibenden Elemente.
    isArray: true
    types:
    - isArray: true
      uid: "'T"
      isLocal: true
metadata:
  ms.openlocfilehash: 319147f72f0ef13a942ab5440a51f60d6f2bae1f
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82680882"

### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.greaterthan
name: GreaterThan
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: Führt einen streng größeren Vergleich von zwei Ganzzahlen $x $ und $y $ aus, codiert in Qubit-Register XS und YS. Wenn $x > y $, wird das Ergebnis-Qubit gekippt, andernfalls wird sein Zustand beibehalten.
remarks: Verwendet den Trick, bei dem $x-y = (x ' + y) ' $, WHERE ' das Einerkomplement bezeichnet.
syntax: 'operation GreaterThan (xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, result : Qubit) : Unit'
references: >-
  - Steven a. Cuccaro, Thomas G. Draper, Samuel A. KUTIN, David Petrie Moulton: "A New Quantum Ripple-Carry Additions Circuit", 2004.
    https://arxiv.org/abs/quant-ph/0410184v1

  - Thomas Haener, Martin roetteler, Krysta M. svore: "Factoring using 2N + 2 Qubits with Toffoli based modulare Multiplikation", 2016 https://arxiv.org/abs/1611.07995
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, result : Qubit)'
  types:
  - name: xs
    summary: LittleEndian-Qubit-Register Codierung der ersten Ganzzahl $x $.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: ys
    summary: LittleEndian Qubit-Register Codierung der zweiten Ganzzahl $y $.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: result
    summary: Einzelnes Qubit, das beim $x > y $ gekippt wird.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 6961a6a4f22d2290a264298a3be3b15f7bdb0ac7
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73214944"

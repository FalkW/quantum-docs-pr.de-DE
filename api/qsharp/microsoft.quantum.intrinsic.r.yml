### YamlMime:QSharpType
uid: microsoft.quantum.intrinsic.r
name: R
type: operation
namespace: Microsoft.Quantum.Intrinsic
summary: >-
  Wendet eine Drehung auf die angegebene Pauli-Achse an.


  \begin{align} R_ {\mu} (\orta) \mathrel{: =} e ^ {-i \Der Ta \ sigma_ {\mu}/2}, \end{align} WHERE $ \mu \in \{i, X, Y, Z\}$.
remarks: Wenn Sie mit `pauli = PauliI`aufgerufen wird, wendet dieser Vorgang eine *globale Phase*an. Diese Phase kann bei Verwendung mit dem `Controlled` -Funktor von Bedeutung sein.
syntax: 'operation R (pauli : Pauli, theta : Double, qubit : Qubit) : Unit'
input:
  content: '(pauli : Pauli, theta : Double, qubit : Qubit)'
  types:
  - name: pauli
    summary: Der Pauli-Operator ($ \mu $), der zum bilden der Drehung exponentiell berechnet werden soll.
    isPrimitive: true
    uid: Pauli
  - name: theta
    summary: Der Winkel, um den das Qubit gedreht werden soll.
    isPrimitive: true
    uid: Double
  - name: qubit
    summary: Das Qubit, auf das das Gate angewendet werden soll.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: d6655f674d7bd6b92cfb0e81e588bdcd48380bf4
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82681783"

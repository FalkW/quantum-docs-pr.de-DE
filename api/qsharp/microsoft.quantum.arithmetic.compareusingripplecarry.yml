### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.compareusingripplecarry
name: CompareUsingRippleCarry
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Diese einheitliche Tests, wenn zwei ganze Zahlen `x` und `y` in gleicher Größe von Qubit-Registern gespeichert werden, erfüllen `x > y`. True gibt an, dass 1 ein XoReD in ein Ausgabe-Qubit ist. Andernfalls wird 0 in einem Ausgabe-Qubit als XoReD fest.


  Mit anderen Worten: Dieser einheitliche $U $ erfüllt Folgendes: $ $ \begin{align} u\ket {x} \ Ket {y} \ Ket {z} = \ket{x}\ket{y}\ket{z\oplus (x > y)}.

  \end{align} $ $.
syntax: 'operation CompareUsingRippleCarry (x : Microsoft.Quantum.Arithmetic.LittleEndian, y : Microsoft.Quantum.Arithmetic.LittleEndian, output : Qubit) : Unit'
references: '- Eine neue Quantum Ripple-be Additions Verbindung Steven a. Cuccaro, Thomas G. Draper, Samuel A. KUTIN, David Petrie Moulton https://arxiv.org/abs/quant-ph/0410184'
input:
  content: '(x : Microsoft.Quantum.Arithmetic.LittleEndian, y : Microsoft.Quantum.Arithmetic.LittleEndian, output : Qubit)'
  types:
  - name: x
    summary: Die erste zu vergleichende Zahl, die im `LittleEndian` Format in einem Qubit-Register gespeichert wird.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: y
    summary: Die zweite zu vergleichende Zahl, die im `LittleEndian` Format in einem Qubit-Register gespeichert werden soll.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: output
    summary: Ein Qubit, das das Ergebnis des Vergleichs $x > y $ speichert.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: fa3db99da28f96e1cb42dd03e465440e015722fa
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73221098"

### YamlMime:QSharpType
uid: microsoft.quantum.canon.applypaulifrombitstring
name: ApplyPauliFromBitString
type: operation
namespace: Microsoft.Quantum.Canon
summary: Wendet einen Pauli-Operator auf jedes Qubit in einem Array an, wenn das entsprechende Bit eines booleschen Arrays mit einer angegebenen Eingabe 체bereinstimmt.
remarks: Das boolesche Array und das Quantum-Register m체ssen die gleiche L채nge aufweisen.
syntax: 'operation ApplyPauliFromBitString (pauli : Pauli, bitApply : Bool, bits : Bool[], qubits : Qubit[]) : Unit'
input:
  content: '(pauli : Pauli, bitApply : Bool, bits : Bool[], qubits : Qubit[])'
  types:
  - name: pauli
    summary: Der Pauli-Operator, `qubits[idx]` auf den angewendet wird.`bitsApply == bits[idx]`
    isPrimitive: true
    uid: Pauli
  - name: bitApply
    summary: Anwenden von Pauli, wenn Bit dieser Wert ist
    isPrimitive: true
    uid: Bool
  - name: bits
    summary: Boolesches Register, das angibt, welches entsprechende `qubits` Qubit in operiert werden soll
    isArray: true
    isPrimitive: true
    uid: Bool
  - name: qubits
    summary: Das Quantum-Register, f체r das der angegebene Pauli-Operator selektiv angewendet wird.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 5a65ec2aae17a1469e820e8cd14a0d50d0639015
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82672430"

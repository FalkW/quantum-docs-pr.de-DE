### YamlMime:QSharpType
uid: microsoft.quantum.arrays.zip
name: Zip
type: function
namespace: microsoft.quantum.arrays
summary: ZIP ist veraltet. Verwenden Sie stattdessen @"microsoft.quantum.arrays.zipped".
examples: >-
  ```qsharp

  let left = [1, 3, 71];

  let right = [false, true];

  let pairs = Zip(left, right); // [(1, false), (3, true)]

  ```
syntax: "function Zip (left : 'T[], right : 'U[]) : ('T, 'U)[]"
input:
  content: "(left : 'T[], right : 'U[])"
  types:
  - name: left
    summary: Ein Array, das Werte für das erste Element jedes Tupels enthält.
    isArray: true
    uid: "'T"
    isLocal: true
  - name: right
    summary: Ein Array, das Werte für das zweite Element jedes Tupels enthält.
    isArray: true
    uid: "'U"
    isLocal: true
output:
  content: ('T, 'U)[]
  types:
  - summary: Ein Array, das Paare des Formulars `(left[idx], right[idx])` für jedes enthält `idx` . Wenn die beiden Arrays nicht die gleiche Länge aufweisen, ist die Ausgabe so lang wie die kürzere der Eingaben.
    isArray: true
    types:
    - uid: "'T"
      isLocal: true
    - uid: "'U"
      isLocal: true
typeParameters:
- uid: "'T"
  summary: Der Typ der linken Array Elemente.
- uid: "'U"
  summary: Der Typ der rechten Array Elemente.
seeAlso:
- zip3
- zip4
- unzipped
metadata:
  ms.openlocfilehash: 13d4e79f779f3fdb669af1d497053a085ffa4902
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91474311"

### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoeachc
name: ApplyToEachC
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  Wendet für jedes Element in einem Register einen Single-Qubit-Vorgang an.

  Der-Modifizierer `C` gibt an, dass der Single-Qubit-Vorgang steuerbar ist.
examples: >-
  Bereiten Sie einen "3-Qubit $ \ket{+} $"-Status vor:


  ```qsharp

  using (register = Qubit[3]) {
      ApplyToEach(H, register);
  }

  ```
syntax: "operation ApplyToEachC (singleElementOperation : ('T => Unit is Ctl), register : 'T[]) : Unit"
input:
  content: "(singleElementOperation : ('T => Unit is Ctl), register : 'T[])"
  types:
  - name: singleElementOperation
    summary: Der auf die einzelnen Qubits anzuwendende Vorgang.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
  - name: register
    summary: Ein Array von Qubits, auf das der angegebene Vorgang angewendet werden soll.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: Das Ziel, für das der Vorgang fungiert.
functors:
- Controlled
seeAlso:
- microsoft.quantum.canon.applytoeach
ms.openlocfilehash: ba49e50f643f061b3f1257e66f9ebb4c686ee1ba
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 10/31/2019
ms.locfileid: "73210477"

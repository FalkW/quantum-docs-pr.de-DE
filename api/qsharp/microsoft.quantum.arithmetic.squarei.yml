### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.squarei
name: SquareI
type: operation
namespace: microsoft.quantum.arithmetic
summary: Berechnet das Quadrat der Ganzzahl `xs` in `result` , das anfänglich NULL sein muss.
remarks: Verwendet einen standardmäßigen Shift-and-Add-Ansatz, um das Quadrat zu berechnen. Speichert $n-$1-Qubits im Vergleich zur geradlinigen Projekt Mappe, die zuerst XS kopiert, bevor Sie einen regulären Multiplikator anwendet und dann den Kopiervorgang zurücknimmt.
syntax: 'operation SquareI (xs : Microsoft.Quantum.Arithmetic.LittleEndian, result : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, result : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: xs
    summary: $n $-Bit-Nummer zum Quadrat (littleEndian)
    uid: microsoft.quantum.arithmetic.littleendian
  - name: result
    summary: $2N $-Bit-Ergebnis (littleEndian) muss zunächst den Status $ \ket {0} $ aufweisen.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: dab206da99d6f418a2af101a29321b1c3e9e43d1
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91475994"

### YamlMime:QSharpType
uid: microsoft.quantum.arrays.any
name: Any
type: function
namespace: microsoft.quantum.arrays
summary: Bei Angabe eines Arrays und eines Prädikats, das für die Elemente des Arrays definiert ist, wird von überprüft, ob mindestens ein Element des Arrays dem Prädikat entspricht.
remarks: "Die-Funktion ist für generische Typen definiert, d. h., wenn ein Array `'T[]` und eine Funktion vorhanden sind, `predicate: 'T -> Bool` können wir einen Wert entwickeln, `Bool` der angibt, ob ein Element übereinstimmt `predicate` ."
examples: >-
  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function IsThreePresent() : Bool {
      let arrayOfInts = [1, 2, 3, 4, 5];
      let is3Present = IsNumberPresentInArray(3, arrayOfInts);
      return is3Present;
  }


  function IsNumberPresentInArray(n : Int, array : Int[]) : Bool {
      return Any(EqualI(_, n), array);
  }

  ```
syntax: "function Any (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: Eine Funktion von `'T` zu `Bool` , die zum Überprüfen von Elementen verwendet wird.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: Ein Array von-Elementen `'T` .
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: Ein `Bool` Wert der-oder-Funktion des-Prädikats, das auf alle-Elemente angewendet wird.
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: Der Typ der `array` Elemente.
metadata:
  ms.openlocfilehash: c37b74635dac37352ec75825f93396bbd88b58b6
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91475807"

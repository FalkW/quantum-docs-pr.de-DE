### YamlMime:QSharpType
uid: microsoft.quantum.canon.embedpauli
name: EmbedPauli
type: function
namespace: microsoft.quantum.canon
summary: Gibt bei einem Single-Qubit-Pauli-Operator und dem Index eines Qubits einen multiqubit-Pauli-Operator mit dem angegebenen Single-Qubit-Operator an diesem Index und `PauliI` an jedem anderen Index zurück.
examples: >-
  So rufen Sie das Array ab `[PauliI, PauliI, PauliX, PauliI]` :


  ```qsharp

  EmbedPauli(PauliX, 2, 3);

  ```
syntax: 'function EmbedPauli (pauli : Pauli, location : Int, n : Int) : Pauli[]'
input:
  content: '(pauli : Pauli, location : Int, n : Int)'
  types:
  - name: pauli
    summary: Ein Single-Qubit-Pauli-Operator, der an der angegebenen Position platziert werden soll.
    isPrimitive: true
    uid: Pauli
  - name: location
    summary: Ein Index `output[location] == pauli` , bei dem `output` die Ausgabe dieser Funktion ist.
    isPrimitive: true
    uid: Int
  - name: n
    summary: Länge des Arrays, das zurückgegeben werden soll.
    isPrimitive: true
    uid: Int
output:
  content: Pauli[]
  types:
  - isArray: true
    isPrimitive: true
    uid: Pauli
metadata:
  ms.openlocfilehash: a5a6dbabfe51f52da9eb63d23bfbf1cf7ee03370
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356370"

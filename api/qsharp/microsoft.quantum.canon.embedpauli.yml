### YamlMime:QSharpType
uid: microsoft.quantum.canon.embedpauli
name: EmbedPauli
type: function
namespace: Microsoft.Quantum.Canon
summary: Gibt bei einem Single-Qubit-Pauli-Operator und dem Index eines Qubits einen multiqubit-Pauli-Operator mit dem angegebenen Single-Qubit-Operator an diesem `PauliI` Index und an jedem anderen Index zurück.
examples: >-
  So rufen Sie das `[PauliI, PauliI, PauliX, PauliI]`Array ab:


  ```qsharp

  EmbedPauli(PauliX, 2, 3);

  ```
syntax: 'function EmbedPauli (pauli : Pauli, location : Int, n : Int) : Pauli[]'
input:
  content: '(pauli : Pauli, location : Int, n : Int)'
  types:
  - name: pauli
    summary: Ein Single-Qubit-Pauli-Operator, der an der angegebenen Position platziert werden soll.
    isPrimitive: true
    uid: Pauli
  - name: location
    summary: Ein Index `output[location] == pauli`, bei `output` dem die Ausgabe dieser Funktion ist.
    isPrimitive: true
    uid: Int
  - name: n
    summary: Länge des Arrays, das zurückgegeben werden soll.
    isPrimitive: true
    uid: Int
output:
  content: Pauli[]
  types:
  - isArray: true
    isPrimitive: true
    uid: Pauli
metadata:
  ms.openlocfilehash: df9cff23b6a7255ec57e944fd1bed140ff18560a
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82675598"

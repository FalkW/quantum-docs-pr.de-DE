### YamlMime:QSharpType
uid: microsoft.quantum.errorcorrection.encodeintobitflipcode
name: EncodeIntoBitFlipCode
type: operation
namespace: Microsoft.Quantum.ErrorCorrection
summary: Codiert in den [3, 1, 3]/⟦ 3, 1, 1 ⟧ Bit-Flip-Code.
syntax: 'operation EncodeIntoBitFlipCode (physRegister : Qubit[], auxQubits : Qubit[]) : Microsoft.Quantum.ErrorCorrection.LogicalRegister'
input:
  content: '(physRegister : Qubit[], auxQubits : Qubit[])'
  types:
  - name: physRegister
    summary: Ein Register physischer Qubits, das die zu schützenden Daten darstellt.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: auxQubits
    summary: Ein Register von hilfsqubits, die anfänglich im ${00}\ket $-Status verwendet werden, um die zu schützenden Daten zu codieren.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Microsoft.Quantum.ErrorCorrection.LogicalRegister
  types:
  - summary: Die in der Codierung verwendeten physischen und zusätzlichen Qubits, die als logisches Register dargestellt werden.
    uid: microsoft.quantum.errorcorrection.logicalregister
seeAlso:
- logicalregister
metadata:
  ms.openlocfilehash: 7a902bc056b9eb39bf12125a1078329f56712ac9
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82685008"

### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplysi
name: MultiplySI
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: Multiplizieren von ganzzahligen ganzzahligen `xs` mit Vorzeichen `ys` mit Vorzeichen und Speichern des Ergebnisses in `result`, das anfänglich NULL sein muss.
syntax: 'operation MultiplySI (xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian)'
  types:
  - name: xs
    summary: n-Bit Multiplikand (signedlittleendian)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: ys
    summary: n-Bit-Multiplikator (signedlittleendian)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: result
    summary: Das 2N-Bit-Ergebnis (signedlittleendian) muss zunächst den Status $ \ket{0}$ aufweisen.
    uid: microsoft.quantum.arithmetic.signedlittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 154e870416e47547a115fcc5533d187b3ed67213
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73214808"

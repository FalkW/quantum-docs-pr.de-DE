### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoelementa
name: ApplyToElementA
type: operation
namespace: microsoft.quantum.canon
summary: >-
  Wendet einen Vorgang auf ein angegebenes Element eines Arrays an.


  Wenn ein Vorgang `op` , ein Index `index` und ein Array von Zielen `targets` , gilt, gilt `op(targets[index])` .
syntax: "operation ApplyToElementA (op : ('T => Unit is Adj), index : Int, targets : 'T[]) : Unit"
input:
  content: "(op : ('T => Unit is Adj), index : Int, targets : 'T[])"
  types:
  - name: op
    summary: Ein anzuwendende Vorgang.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: index
    summary: Ein Index in das Array von Zielen.
    isPrimitive: true
    uid: Int
  - name: targets
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: Der Eingabetyp des Vorgangs, der angewendet werden soll.
functors:
- Adjoint
seeAlso:
- microsoft.quantum.canon.applytoelement
- microsoft.quantum.canon.applytoelementc
- microsoft.quantum.canon.applytoelementca
metadata:
  ms.openlocfilehash: f03e293a5e786d09137e29a21b8a100eeffe70b8
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89357628"

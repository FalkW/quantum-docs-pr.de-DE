### YamlMime:QSharpNamespace
functions:
- summary: Gibt den absoluten Wert einer komplexen Zahl vom Typ zurück `Complex` .
  uid: Microsoft.Quantum.Math.AbsComplex
- summary: Gibt den absoluten Wert einer komplexen Zahl vom Typ zurück `ComplexPolar` .
  uid: Microsoft.Quantum.Math.AbsComplexPolar
- summary: Gibt den absoluten Wert einer Gleitkommazahl mit doppelter Genauigkeit zurück.
  uid: Microsoft.Quantum.Math.AbsD
- summary: Gibt den absoluten Wert einer ganzen Zahl zurück.
  uid: Microsoft.Quantum.Math.AbsI
- summary: Gibt den absoluten Wert einer großen Ganzzahl zurück.
  uid: Microsoft.Quantum.Math.AbsL
- summary: Gibt den quadratischen absoluten Wert einer komplexen Zahl vom Typ zurück `Complex` .
  uid: Microsoft.Quantum.Math.AbsSquaredComplex
- summary: Gibt den quadratischen absoluten Wert einer komplexen Zahl vom Typ zurück `ComplexPolar` .
  uid: Microsoft.Quantum.Math.AbsSquaredComplexPolar
- summary: Hilfsfunktion, die verwendet wird, um die bitgröße eines Werts rekursiv zu berechnen.
  uid: Microsoft.Quantum.Math.AccumulatedBitsizeI
- summary: Hilfsfunktion, die verwendet wird, um die bitgröße eines Werts rekursiv zu berechnen.
  uid: Microsoft.Quantum.Math.AccumulatedBitsizeL
- summary: Gibt einen Winkel zurück, dessen Kosinus die angegebene Zahl ist.
  uid: Microsoft.Quantum.Math.ArcCos
- summary: Berechnet den umgekehrten hyperbolischen Kosinus einer Zahl.
  uid: Microsoft.Quantum.Math.ArcCosh
- summary: Gibt einen Winkel zurück, dessen Sinus die angegebene Zahl ist.
  uid: Microsoft.Quantum.Math.ArcSin
- summary: Berechnet den umgekehrten hyperbolischen Sinus einer Zahl.
  uid: Microsoft.Quantum.Math.ArcSinh
- summary: Gibt einen Winkel zurück, dessen Tangens die angegebene Zahl ist.
  uid: Microsoft.Quantum.Math.ArcTan
- summary: Gibt einen Winkel zurück, dessen Tangens der Quotient zweier angegebener Zahlen ist.
  uid: Microsoft.Quantum.Math.ArcTan2
- summary: Berechnet den umgekehrten hyperbolischen Tangens einer Zahl.
  uid: Microsoft.Quantum.Math.ArcTanh
- summary: Gibt die Phase einer komplexen Zahl vom Typ zurück `Complex` .
  uid: Microsoft.Quantum.Math.ArgComplex
- summary: Gibt die Phase einer komplexen Zahl vom Typ zurück `ComplexPolar` .
  uid: Microsoft.Quantum.Math.ArgComplexPolar
- summary: >-
    Gibt für eine nicht negative ganze `a` Zahl die Anzahl der Bits zurück, die zur Darstellung von erforderlich sind `a` .

    Das heißt, die kleinste $n $ wird so zurückgegeben, dass $a < 2 ^ n $.
  uid: Microsoft.Quantum.Math.BitSizeI
- summary: >-
    Gibt für eine nicht negative ganze `a` Zahl die Anzahl der Bits zurück, die zur Darstellung von erforderlich sind `a` .

    Das heißt, die kleinste $n $ wird so zurückgegeben, dass $a < 2 ^ n $.
  uid: Microsoft.Quantum.Math.BitSizeL
- summary: Gibt die kleinste Ganzzahl zurück, die größer oder gleich der angegebenen Zahl ist.
  uid: Microsoft.Quantum.Math.Ceiling
- summary: Konvertiert eine komplexe Zahl vom Typ `Complex` in eine komplexe Zahl vom Typ `ComplexPolar` .
  uid: Microsoft.Quantum.Math.ComplexAsComplexPolar
- summary: Konvertiert eine komplexe Zahl vom Typ `ComplexPolar` in eine komplexe Zahl vom Typ `Complex` .
  uid: Microsoft.Quantum.Math.ComplexPolarAsComplex
- summary: Sucht den fortgesetzten Bruchteil konvergent, der sich am nächsten befindet, wenn `fraction` der Nenner kleiner oder gleich ist. `denominatorBound`
  uid: Microsoft.Quantum.Math.ContinuedFractionConvergentI
- summary: Sucht den fortgesetzten Bruchteil konvergent, der sich am nächsten befindet, wenn `fraction` der Nenner kleiner oder gleich ist. `denominatorBound`
  uid: Microsoft.Quantum.Math.ContinuedFractionConvergentL
- summary: Gibt den Kosinus des angegebenen Winkels zurück.
  uid: Microsoft.Quantum.Math.Cos
- summary: Gibt den Hyperbelkosinus des angegebenen Winkels zurück.
  uid: Microsoft.Quantum.Math.Cosh
- summary: Dividiert einen BigInteger-Wert durch einen anderen, gibt das Ergebnis und den Rest als Tupel zurück.
  uid: Microsoft.Quantum.Math.DivRemL
- summary: Gibt den Quotienten von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.DividedByC
- summary: Gibt den Quotienten von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.DividedByCP
- summary: Gibt den Quotienten von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.DividedByD
- summary: Gibt den Quotienten von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.DividedByI
- summary: Gibt den Quotienten von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.DividedByL
- summary: Gibt die natürliche logarithmische Basis $e $ zurück.
  uid: Microsoft.Quantum.Math.E
- summary: Gibt $e $ in der angegebenen Potenz zurück.
  uid: Microsoft.Quantum.Math.ExpD
- summary: Gibt eine ganze Zahl zurück, die in Bezug auf einen angegebenen Modulus zu einer gegebenen Potenz ausgelöst wird.
  uid: Microsoft.Quantum.Math.ExpModI
- summary: Gibt eine ganze Zahl zurück, die in Bezug auf einen angegebenen Modulus zu einer gegebenen Potenz ausgelöst wird.
  uid: Microsoft.Quantum.Math.ExpModL
- summary: Berechnet ein Tupel $ (u, v) $, sodass $u \cdot a + v \cdot b = \operatorname{GCD} (a, b) $, wobei $ \operatschmue{GCD} $ $a $ Greatest common divisor von $a $ und $b $ ist. Die GCD ist immer positiv.
  uid: Microsoft.Quantum.Math.ExtendedGreatestCommonDivisorI
- summary: Berechnet ein Tupel $ (u, v) $, sodass $u \cdot a + v \cdot b = \operatorname{GCD} (a, b) $, wobei $ \operatschmue{GCD} $ $a $ Greatest common divisor von $a $ und $b $ ist. Die GCD ist immer positiv.
  uid: Microsoft.Quantum.Math.ExtendedGreatestCommonDivisorL
- summary: Gibt den größten ganzzahligen Wert zurück, der im Vergleich zur angegebenen Zahl kleiner oder gleich groß ist.
  uid: Microsoft.Quantum.Math.Floor
- summary: Berechnet den größten gemeinsamen Divisor von $a $ und $b $. Die GCD ist immer positiv.
  uid: Microsoft.Quantum.Math.GreatestCommonDivisorI
- summary: Berechnet den größten gemeinsamen Divisor von $a $ und $b $. Die GCD ist immer positiv.
  uid: Microsoft.Quantum.Math.GreatestCommonDivisorL
- summary: Gibt den Rest der Division zweier angegebener Zahlen zurück.
  uid: Microsoft.Quantum.Math.IEEERemainder
- summary: Gibt $b $ zurück, sodass $a \cdot b = 1 (\operatschmue{mod} \texttt{Modulus}) $.
  uid: Microsoft.Quantum.Math.InverseModI
- summary: Gibt $b $ zurück, sodass $a \cdot b = 1 (\operatschmue{mod} \texttt{Modulus}) $.
  uid: Microsoft.Quantum.Math.InverseModL
- summary: Gibt true zurück, wenn $a $ und $b $ eine Co-Primzahl sind, andernfalls false.
  uid: Microsoft.Quantum.Math.IsCoprimeI
- summary: Gibt true zurück, wenn $a $ und $b $ eine Co-Primzahl sind, andernfalls false.
  uid: Microsoft.Quantum.Math.IsCoprimeL
- summary: Berechnet den Logarithmus einer Zahl zur Basis 2.
  uid: Microsoft.Quantum.Math.Lg
- summary: Gibt den natürlichen Logarithmus (Basis $e $) einer angegebenen Zahl zurück.
  uid: Microsoft.Quantum.Math.Log
- summary: Gibt den Logarithmus einer angegebenen Zahl zur Basis 10 zurück.
  uid: Microsoft.Quantum.Math.Log10
- summary: Gibt den natürlichen Logarithmus von 2 zurück.
  uid: Microsoft.Quantum.Math.LogOf2
- summary: Gibt bei einem Array von ganzen Zahlen das größte Element zurück.
  uid: Microsoft.Quantum.Math.Max
- summary: Gibt die größere von zwei angegebenen Zahlen zurück.
  uid: Microsoft.Quantum.Math.MaxD
- summary: Gibt die größere von zwei angegebenen Zahlen zurück.
  uid: Microsoft.Quantum.Math.MaxI
- summary: Gibt die größere von zwei angegebenen Zahlen zurück.
  uid: Microsoft.Quantum.Math.MaxL
- summary: Gibt bei einem Array von ganzen Zahlen das kleinste Element zurück.
  uid: Microsoft.Quantum.Math.Min
- summary: Gibt die kleinere von zwei angegebenen Zahlen zurück.
  uid: Microsoft.Quantum.Math.MinD
- summary: Gibt die kleinere von zwei angegebenen Zahlen zurück.
  uid: Microsoft.Quantum.Math.MinI
- summary: Gibt die kleinere von zwei angegebenen Zahlen zurück.
  uid: Microsoft.Quantum.Math.MinL
- summary: Gibt die Differenz zwischen zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.MinusC
- summary: Gibt die Differenz zwischen zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.MinusCP
- summary: Gibt die Differenz zwischen zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.MinusD
- summary: Gibt die Differenz zwischen zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.MinusI
- summary: Gibt die Differenz zwischen zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.MinusL
- summary: Gibt den Modulo einer Zahl in Bezug auf eine andere Zahl zurück.
  uid: Microsoft.Quantum.Math.ModI
- summary: Gibt den Modulo einer Zahl in Bezug auf eine andere Zahl zurück.
  uid: Microsoft.Quantum.Math.ModL
- summary: Führt eine modulare Division für eine Zahl aus, die mit einer anderen Zahl ausgelöst wird.
  uid: Microsoft.Quantum.Math.ModPowL
- summary: Berechnet den kanonischen Rückstand von `value` Modulo `modulus` .
  uid: Microsoft.Quantum.Math.ModulusI
- summary: Berechnet den kanonischen Rückstand von `value` Modulo `modulus` .
  uid: Microsoft.Quantum.Math.ModulusL
- summary: Gibt die unäre Negation einer Eingabe zurück.
  uid: Microsoft.Quantum.Math.NegationC
- summary: Gibt die unäre Negation einer Eingabe zurück.
  uid: Microsoft.Quantum.Math.NegationCP
- summary: Gibt die unäre Negation einer Eingabe zurück.
  uid: Microsoft.Quantum.Math.NegationD
- summary: Gibt die unäre Negation einer Eingabe zurück.
  uid: Microsoft.Quantum.Math.NegationI
- summary: Gibt die unäre Negation einer Eingabe zurück.
  uid: Microsoft.Quantum.Math.NegationL
- summary: Stellt das Verhältnis eines Kreisumfangs zum Kreisdurchmesser durch die Konstante π dar.
  uid: Microsoft.Quantum.Math.PI
- summary: >-
    Gibt die `L(p)` Norm eines Vektors von `Double` s zurück.

    Das heißt, wenn ein Array $x $ vom Typ ist `Double[]` , wird der $p $-Norm $ \| x \| \_ p = (\ sum_ {j} | x_j | ^ {p}) ^ {1/p} $ zurückgegeben.
  uid: Microsoft.Quantum.Math.PNorm
- summary: >-
    Normalisiert einen Vektor von `Double` s in der `L(p)` Norm.

    Das heißt, wenn ein Array $x $ vom Typ ist `Double[]` , wird ein Array zurückgegeben, in dem alle Elemente durch die $p $-Norm $ \| x _P $ dividiert werden \| .
  uid: Microsoft.Quantum.Math.PNormalized
- summary: Gibt die Summe (Verkettung) von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.PlusA
- summary: Gibt die Summe von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.PlusC
- summary: Gibt die Summe von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.PlusCP
- summary: Gibt die Summe von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.PlusD
- summary: Gibt die Summe von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.PlusI
- summary: Gibt die Summe von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.PlusL
- summary: Gibt eine Zahl zurück, die zu einer angegebenen Potenz ausgelöst wird.
  uid: Microsoft.Quantum.Math.PowC
- summary: Intern. Da es am einfachsten ist, die Leistung von zwei komplexen Zahlen in Kartesischer Form als Rückgabe in Polar Form zu definieren, definieren wir dies hier, und konvertieren Sie dann nach Bedarf.
  uid: Microsoft.Quantum.Math.PowCAsCP
- summary: Gibt eine Zahl zurück, die zu einer angegebenen Potenz ausgelöst wird.
  uid: Microsoft.Quantum.Math.PowCP
- summary: Gibt die Zahl x, die für die Potenz y ausgelöst wird, zurück.
  uid: Microsoft.Quantum.Math.PowD
- summary: Gibt eine Zahl zurück, die zu einer angegebenen Potenz ausgelöst wird.
  uid: Microsoft.Quantum.Math.PowI
- summary: Gibt eine Zahl zurück, die zu einer angegebenen Potenz ausgelöst wird.
  uid: Microsoft.Quantum.Math.PowL
- summary: Berechnet den Modulo zwischen zwei reellen Zahlen.
  uid: Microsoft.Quantum.Math.RealMod
- summary: Rundet einen Wert auf die nächste ganze Zahl.
  uid: Microsoft.Quantum.Math.Round
- summary: Gibt eine ganze Zahl zurück, die das Vorzeichen einer Zahl angibt.
  uid: Microsoft.Quantum.Math.SignD
- summary: Gibt eine ganze Zahl zurück, die das Vorzeichen einer Zahl angibt.
  uid: Microsoft.Quantum.Math.SignI
- summary: Gibt eine ganze Zahl zurück, die das Vorzeichen einer Zahl angibt.
  uid: Microsoft.Quantum.Math.SignL
- summary: Gibt den Sinus des angegebenen Winkels zurück.
  uid: Microsoft.Quantum.Math.Sin
- summary: Gibt den Hyperbelsinus des angegebenen Winkels zurück.
  uid: Microsoft.Quantum.Math.Sinh
- summary: Gibt die Quadratwurzel einer angegebenen Zahl zurück.
  uid: Microsoft.Quantum.Math.Sqrt
- summary: Gibt den quadratischen 2-Norm eines Vektors zurück.
  uid: Microsoft.Quantum.Math.SquaredNorm
- summary: Gibt den Tangens des angegebenen Winkels zurück.
  uid: Microsoft.Quantum.Math.Tan
- summary: Gibt den Hyperbeltangens des angegebenen Winkels zurück.
  uid: Microsoft.Quantum.Math.Tanh
- summary: Gibt das Produkt von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.TimesC
- summary: Gibt das Produkt von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.TimesCP
- summary: Gibt das Produkt von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.TimesD
- summary: Gibt das Produkt von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.TimesI
- summary: Gibt das Produkt von zwei Eingaben zurück.
  uid: Microsoft.Quantum.Math.TimesL
- summary: Berechnet den ganzzahligen Teil einer Zahl.
  uid: Microsoft.Quantum.Math.Truncate
- summary: Interner rekursiver aufrufsbefehl zum Berechnen der GCD mit einer gebundenen
  uid: Microsoft.Quantum.Math._ContinuedFractionConvergentI
- summary: Interner rekursiver aufrufsbefehl zum Berechnen der GCD mit einer gebundenen
  uid: Microsoft.Quantum.Math._ContinuedFractionConvergentL
- summary: Interner rekursiver aufrufsbefehl zum Berechnen der GCD.
  uid: Microsoft.Quantum.Math._ExtendedGreatestCommonDivisorI
- summary: Interner rekursiver aufrufsbefehl zum Berechnen der GCD.
  uid: Microsoft.Quantum.Math._ExtendedGreatestCommonDivisorL
name: Microsoft.Quantum.Math
newtypes:
- summary: Stellt eine rationale Zahl der Form dar `p/q` . "Integer" `p` ist das erste Element des Tupels und `q` ist das zweite Element des Tupels.
  uid: Microsoft.Quantum.Math.BigFraction
- summary: Stellt eine komplexe Zahl durch seine reellen und imaginären Komponenten dar. Das erste Element des Tupels ist die echte Komponente, die zweite, die imaginäre Komponente.
  uid: Microsoft.Quantum.Math.Complex
- summary: >-
    Stellt eine komplexe Zahl in Polar Form dar.

    Die Polar Darstellung einer komplexen Zahl ist $c = r e ^ {i t} $.
  uid: Microsoft.Quantum.Math.ComplexPolar
- summary: Stellt eine rationale Zahl der Form dar `p/q` . "Integer" `p` ist das erste Element des Tupels und `q` ist das zweite Element des Tupels.
  uid: Microsoft.Quantum.Math.Fraction
operations:
- summary: >+
    > [!WARNING]

    > RandomInt ist veraltet. Verwenden Sie stattdessen <xref:Microsoft.Quantum.Random.DrawRandomInt>.

  uid: Microsoft.Quantum.Math.RandomInt
- summary: >+
    > [!WARNING]

    > RandomIntPow2 wurde als veraltet markiert. Verwenden Sie stattdessen <xref:Microsoft.Quantum.Random.DrawRandomInt>.

  uid: Microsoft.Quantum.Math.RandomIntPow2
- summary: >+
    > [!WARNING]

    > Randomreal ist veraltet. Verwenden Sie stattdessen <xref:Microsoft.Quantum.Random.DrawRandomDouble>.

  uid: Microsoft.Quantum.Math.RandomReal
- summary: >+
    > [!WARNING]

    > Randomsinglequbitpauli ist veraltet. Verwenden Sie stattdessen <xref:Microsoft.Quantum.Random.DrawRandomPauli>.

  uid: Microsoft.Quantum.Math.RandomSingleQubitPauli
summary: Dieser Namespace enthält klassische mathematische Funktionen und Datentypen.
uid: Microsoft.Quantum.Math
metadata:
  ms.openlocfilehash: 13ccb80ce78e7d9d6341d7b228e39b65026ab090
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92723396"

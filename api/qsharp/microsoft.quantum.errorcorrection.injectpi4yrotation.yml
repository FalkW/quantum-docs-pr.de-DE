### YamlMime:QSharpType
uid: microsoft.quantum.errorcorrection.injectpi4yrotation
name: InjectPi4YRotation
type: operation
namespace: Microsoft.Quantum.ErrorCorrection
summary: >-
  Dreht ein einzelnes Qubit um die Y-Achse.


  Führt eine Drehung/4-Drehung `Y`um durch.


  Die Drehung erfolgt durch die Verwendung eines magischen Zustands. Das heißt, eine Kopie des Zustands $ $ \begin{align} \cos\bruchteil{8} {\pi} \ket{0} + \sin \bruchteil {\pi}{8} \ket.{1}

  \end{align} $ $
remarks: >-
  Die folgenden sind gleichwertig:


  ```qsharp

  Ry(PI() / 4.0, data);

  ```


  and


  ```qsharp

  using (magic = Qubit()) {
      Ry(PI() / 4.0, magic);
      InjectPi4YRotation(data, magic);
      Reset(magic);
  }

  ```


  Dieser Vorgang unterstützt `Adjoint` das Funktor. in diesem Fall wird derselbe magische Zustand verwendet, aber die Auswirkung auf das Daten-Qubit ist eine $-\ pi/4 $ $Y $-Rotation.
syntax: 'operation InjectPi4YRotation (data : Qubit, magic : Qubit) : Unit'
input:
  content: '(data : Qubit, magic : Qubit)'
  types:
  - name: data
    summary: Ein Qubit, das um $Y $ um $ \pi/$4 gedreht werden soll.
    isPrimitive: true
    uid: Qubit
  - name: magic
    summary: Ein Qubit, das sich anfänglich im Magic-Zustand befindet. Die folgende Anwendung dieses Vorgangs `magic` wird an den Status "$ \ket{0}$" zurückgegeben.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
metadata:
  ms.openlocfilehash: cb0efd896b4d8f9b4b81c061b644a1e2f7f74e96
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82684883"

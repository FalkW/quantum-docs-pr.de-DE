### YamlMime:QSharpType
uid: microsoft.quantum.canon.permutequbits
name: PermuteQubits
type: operation
namespace: Microsoft.Quantum.Canon
summary: Permutes Qubits mithilfe des Swap-Vorgangs.
examples: >-
  Bei Angabe von Order = [2, 1, 0] und Register $ \ket{\ alpha_0} \ket{\ alpha_1} \ket{\ alpha_2} $ Ã¤ndert permutequbits das Register in $ \ket{\ alpha_2} \ket{\ alpha_1} \ket{\ alpha_0} $.


  ```qsharp

  // The following two lines are equivalent

  PermuteQubits([2, 1, 0], register);

  SWAP(register[0], register[2]);

  ```
syntax: 'operation PermuteQubits (ordering : Int[], register : Qubit[]) : Unit'
input:
  content: '(ordering : Int[], register : Qubit[])'
  types:
  - name: ordering
    summary: Beschreibt die neue Reihenfolge der Qubits, bei der das Qubit bei Index i nun die Reihenfolge [i] hat.
    isArray: true
    isPrimitive: true
    uid: Int
  - name: register
    summary: Das Qubit-Register, das bearbeitet werden soll.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: e6f0db4538980d47c26a6947223546c4beb3a180
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82678598"

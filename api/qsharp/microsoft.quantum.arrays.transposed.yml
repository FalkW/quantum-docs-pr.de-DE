### YamlMime:QSharpType
uid: microsoft.quantum.arrays.transposed
name: Transposed
type: function
namespace: microsoft.quantum.arrays
summary: >-
  Gibt das umsetzen einer Matrix zurück, die als Array von Arrays dargestellt wird.


  Eingabe als $r \times c $ Matrix mit $r $ Rows und $c $ Columns.  Die Matrix ist zeilenbasiert, d. h., es wird `matrix[i][j]` auf das Element in Zeile $i $ und Spalte $j $ zugegriffen.


  Diese Funktion gibt die $c \times r $-Matrix zurück, die das umsetzen der Eingabe Matrix ist.
examples: >-
  ```Q#

  // same as [[1, 4], [2, 5], [3, 6]]

  let transposed = Transposed([[1, 2, 3], [4, 5, 6]]);

  ```
syntax: "function Transposed (matrix : 'T[][]) : 'T[][]"
input:
  content: "(matrix : 'T[][])"
  types:
  - name: matrix
    summary: Zeilen basiertes $r \times c $ Matrix
    isArray: true
    types:
    - isArray: true
      uid: "'T"
      isLocal: true
output:
  content: "'T[][]"
  types:
  - summary: Umgesetzte $c \times r $ Matrix
    isArray: true
    types:
    - isArray: true
      uid: "'T"
      isLocal: true
typeParameters:
- uid: "'T"
  summary: Der Typ der einzelnen Elemente von `matrix` .
metadata:
  ms.openlocfilehash: 3d9b199a15cf412f99e10d9fffc628306c4ea9d9
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91494094"

### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementbymodularinteger
name: IncrementByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Führt ein modulares Inkrement für ein Qubit-Register durch eine ganzzahlige Konstante aus.


  Wir bezeichnen `increment` von a, `modulus` von N und einer Ganzzahl, die in `target` von y codiert ist. der Vorgang führt die folgende Transformation aus: \begin{align} \ket{y} \mapsto \ket{y + 1 \operatschmue{mod} N} \end{align} ganze Zahlen werden im Little-Endian-Format codiert
remarks: Geht davon aus, dass der Wert von Target kleiner als N ist. Beachten Sie, dass <xref:microsoft.quantum.arithmetic.incrementphasebymodularinteger> den gleichen Vorgang implementiert, aber `PhaseLittleEndian` Basis.
syntax: 'operation IncrementByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: increment
    summary: Ganzzahliges Inkrement ein, das y hinzugefügt werden soll.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Ganzzahliger Wert N für die Mods y + a.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Die ganze Zahl y in `LittleEndian` Format, der `increment` a hinzugefügt wird.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- incrementphasebymodularinteger
metadata:
  ms.openlocfilehash: 9b61ed007a08d176d1754a7c1cd6cd2d9edce7d2
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73219058"

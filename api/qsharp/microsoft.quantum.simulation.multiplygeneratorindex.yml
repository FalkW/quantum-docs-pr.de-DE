### YamlMime:QSharpType
uid: microsoft.quantum.simulation.multiplygeneratorindex
name: MultiplyGeneratorIndex
type: function
namespace: Microsoft.Quantum.Simulation
summary: Multipliziert den Koeffizienten in einer `GeneratorIndex`.
examples: >-
  ```qsharp

  let gen = GeneratorIndex(([1,2,3],[coeff]),[1,2,3]);

  let ((idxPaulis, idxDoubles), idxQubits) = MultiplyGeneratorIndex(multiplier, gen);

  // idxDoubles[0] == multiplier * coeff;

  ```
syntax: 'function MultiplyGeneratorIndex (multiplier : Double, generatorIndex : Microsoft.Quantum.Simulation.GeneratorIndex) : Microsoft.Quantum.Simulation.GeneratorIndex'
input:
  content: '(multiplier : Double, generatorIndex : Microsoft.Quantum.Simulation.GeneratorIndex)'
  types:
  - name: multiplier
    summary: Der Multiplikator des Koeffizienten.
    isPrimitive: true
    uid: Double
  - name: generatorIndex
    summary: Die zu multiplizierende `GeneratorIndex`.
    uid: microsoft.quantum.simulation.generatorindex
output:
  content: Microsoft.Quantum.Simulation.GeneratorIndex
  types:
  - summary: Ein `GeneratorIndex` , der einen Begriff mit einem anderen `multiplier` Faktor darstellt.
    uid: microsoft.quantum.simulation.generatorindex
seeAlso:
- microsoft.quantum.canon.generatorindex
metadata:
  ms.openlocfilehash: 37a7981f62881e1b8f1a6874508df87c042c6382
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82682589"

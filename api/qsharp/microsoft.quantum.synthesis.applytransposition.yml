### YamlMime:QSharpType
uid: microsoft.quantum.synthesis.applytransposition
name: ApplyTransposition
type: operation
namespace: microsoft.quantum.synthesis
summary: Mit diesem Vorgang wird die Amplitude beim Index `a` mit der Amplitude bei Index `b` im angegebenen Status Vektor der `register` Länge $n $ vertauscht.  Wenn `a` entspricht `b` , wird der Zustands Vektor nicht geändert.
examples: >-
  Bereiten Sie eine einheitliche Superposition der Zahl Zustände $ | 1 \ rangle $, $ | 2 \ rangle $ und $ | 3 \ rangle $ on 2 Qubits vor.


  ```Q#

  using (qubits = Qubit[2]) {
    let register = LittleEndian(qubits);
    PrepareUniformSuperposition(3, register);
    ApplyTransposition(0, 3, register);
  }

  ```
syntax: 'operation ApplyTransposition (a : Int, b : Int, qubits : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(a : Int, b : Int, qubits : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: a
    summary: Erster Index (muss ein Wert zwischen 0 und $2 ^ n-$1 sein)
    isPrimitive: true
    uid: Int
  - name: b
    summary: Zweiter Index (muss ein Wert zwischen 0 und $2 ^ n-$1 sein)
    isPrimitive: true
    uid: Int
  - name: qubits
    summary: Eine Liste von $n $ Qubits, auf die die-Umsetzung angewendet wird.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: caffae137e4e1fa23ef087c4fbb30179a43dd8c0
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89327985"

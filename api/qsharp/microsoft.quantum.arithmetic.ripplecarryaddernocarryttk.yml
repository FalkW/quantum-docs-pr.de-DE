### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.ripplecarryaddernocarryttk
name: RippleCarryAdderNoCarryTTK
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Umkehrbar, direkte Ripple-Durchführung von zwei Ganzzahlen ohne Ausführung.


  Bei zwei $n in den littleEndian-Registern und in `xs` den littleEndian- `ys`Registern codierten $-Bit-Ganzzahlen berechnet der Vorgang die Summe der beiden integger Modulo $2 ^ n $, wobei `xs` $n `ys`$ die bitgröße der Eingaben und ist. Das Bit wird nicht berechnet.
remarks: Dieser Vorgang verfügt über die gleiche Funktionalität wie ripplecarryadderttk, gibt jedoch nicht das "Carry"-Bit zurück.
syntax: 'operation RippleCarryAdderNoCarryTTK (xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
references: >-
  - Yasuhiro Takahashi, Seiichiro Tani, Noboru Kunihiro: "Quantum Additions-und ungebundene Fan-Out", Quantum-Informationen und-Berechnung, Vol. 10, 2010.
    https://arxiv.org/abs/0910.2530
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: xs
    summary: Der littleEndian-Qubit-Register Codierung der ersten ganzzahligen Summe.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: ys
    summary: Der littleEndian-Qubit-Registrierungs Codierungs Wert für die zweite Ganzzahl sumund wird so geändert, dass die $n minimalen signifikanten Bits der Summe enthalten ist.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: cf6855325edc354d22b0324f5949a435a11ce8bb
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82676683"

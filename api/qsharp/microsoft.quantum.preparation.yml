### YamlMime:QSharpNamespace
functions:
- summary: >-
    Berechnet die Bloch-Kugel Koordinaten für einen Single-Qubit-Zustand.

    Wenn zwei komplexe Zahlen $a 0 sind, a1 $, die den Qubit-Status darstellen, berechnet Koordinaten auf der Bloch-Kugel, sodass $a 0 \ket {0} + a1 \ket {1} = r e ^ {IT} (e ^ {-i \phi/2}\cos{(\ der TA/2)} \ket {0} + e ^ {i \phi/2}\sin{(\-Ta/2)} \ket {1} ) $.
  uid: Microsoft.Quantum.Preparation.BlochSphereCoordinates
- summary: >-
    Verwendet die Quantum-Rom-Technik, um eine angegebene Dichte Matrix darzustellen.

    Eine Liste mit $N $ Koeffizienten $ \ alpha_j $, dadurch wird ein einheitlicher $U $ zurückgegeben, der die Quantum-Rom-Technik verwendet, um eine Näherung von $ \tilde \rho\ sum_ {j = 0} ^ {N-1} p_j \ket{j}\bra{j} $ der Reinigung der Dichte Matrix $ \rho = \ sum_ {j = 0} ^ {n-1} \bruchteil {| alpha_j |} zu erstellen. {\ sum_k | \ alpha_k |} \ket{j}\bra{j} $. In dieser Näherung ist der Fehler $ \epsilon $, dass $ | p_j-\bruch{| alpha_j |} {\ sum_k | \ alpha_k |} | \le \epsilon/N $ und $ \| \tilde \rho-\rho \| \le \epsilon $. Anders ausgedrückt: $ $ \begin{align} u\ket {0} ^ {\lceil\ Log_2 n\rceil} \ Ket {0} ^ {m} = \ sum_ {j = 0} ^ {N-1} \sqrt{p_j} \ket{j}\ket{\text{Garbage} _J}. \end{align} $ $
  uid: Microsoft.Quantum.Preparation.QuantumROM
- summary: ''
  uid: Microsoft.Quantum.Preparation.QuantumROMBitStringWriterByIndex
- summary: Gibt die Gesamtanzahl der Qubits zurück, die dem von zurückgegebenen Vorgang zugeordnet werden müssen `QuantumROM` .
  uid: Microsoft.Quantum.Preparation.QuantumROMQubitCount
- summary: ''
  uid: Microsoft.Quantum.Preparation.RangeLength
- summary: ''
  uid: Microsoft.Quantum.Preparation.RoundedDiscretizationCoefficients
- summary: >-
    Gibt einen Vorgang zurück, der einen bestimmten Quantum-Zustand vorbereitet.

    Der zurückgegebene Vorgang $U $ bereitet einen beliebigen Quantum-Status $ \ket{\psi} $ mit komplexen Koeffizienten $r _J e ^ {i t_j} $ aus dem $n $-Qubit-Berechnungsbasis Status $ \ket{0...0} $.

    Die Aktion "U" für ein neu zugeordneter Register wird durch "$ $ \begin{align} u\ket {0..." angegeben. 0} = \ket{\psi} = \bruchteil {\ sum_ {j = 0} ^ {2 ^ n-1} r_j e ^ {i t_j} \ket{j}}{\sqrt{\ sum_ {j = 0} ^ {2 ^ n-1} | r_j | ^ 2}}. \end{align} $ $
  uid: Microsoft.Quantum.Preparation.StatePreparationComplexCoefficients
- summary: >-
    Gibt einen Vorgang zurück, der den gegebenen Quantum-Zustand vorbereitet.

    Der zurückgegebene Vorgang $U $ bereitet einen beliebigen Quantum-Status $ \ket{\psi} $ mit positiven Koeffizienten $ \ alpha_j \ge $0 aus dem $n $-Qubit-Berechnungsbasis Status $ \ket{0...0} $ vor.

    Die Aktion "U" für ein neu zugeordneter Register wird durch "$ $ \begin{align} U \ket{0\cdots 0} = \ket{\psi} = \bruchteil {" angegeben. \ sum_ {j = 0} ^ {2 ^ n-1} \ alpha_j \ket{j}}{\sqrt{\ sum_ {j = 0} ^ {2 ^ n-1} | \ alpha_j | ^ 2}}. \end{align} $ $
  uid: Microsoft.Quantum.Preparation.StatePreparationPositiveCoefficients
- summary: Implementierungs Schritt eines willkürlichen Zustands Vorbereitungs Verfahrens.
  uid: Microsoft.Quantum.Preparation._ApproximatelyUnprepareArbitraryStatePlan
- summary: ''
  uid: Microsoft.Quantum.Preparation._CompileApproximateArbitraryStatePreparation
- summary: ''
  uid: Microsoft.Quantum.Preparation._QuantumROMDiscretization
- summary: ''
  uid: Microsoft.Quantum.Preparation._QuantumROMQubitManager
- summary: Implementierungs Schritt eines willkürlichen Zustands Vorbereitungs Verfahrens.
  uid: Microsoft.Quantum.Preparation._StatePreparationSBMComputeCoefficients
name: Microsoft.Quantum.Preparation
newtypes: []
operations:
- summary: ''
  uid: Microsoft.Quantum.Preparation.ApplyGlobalRotationStep
- summary: ''
  uid: Microsoft.Quantum.Preparation.ApplyMultiplexStep
- summary: Wendet einen Vorgang auf die zugrunde liegenden Qubits an, die ein Little-in-sdian-Register bilden. Dieser Vorgang wird als "intern" gekennzeichnet, da ein Little-te-Register als "nicht transparent" bezeichnet werden soll, sodass es sich hierbei nur um ein Implementierungsdetail handelt.
  uid: Microsoft.Quantum.Preparation.ApplyToLittleEndian
- summary: Bereitet mithilfe eines Satzes von Koeffizienten und einem Little-Endian-codierten Quantum-Register einen Zustand für dieses Register vor, der durch die angegebenen Koeffizienten beschrieben wird, bis zu einer bestimmten Näherungs Toleranz.
  uid: Microsoft.Quantum.Preparation.ApproximatelyPrepareArbitraryState
- summary: Bereitet einen Satz von Koeffizienten und ein Little-Endian-codiertes Quantum-Register vor und bereitet einen Status für dieses Register vor, der von den gegebenen Koeffizienten beschrieben wird.
  uid: Microsoft.Quantum.Preparation.PrepareArbitraryState
- summary: Bereitet den Status "Choi – jamiłkowski" für einen bestimmten Vorgang auf angegebene Verweis-und Ziel Register vor.
  uid: Microsoft.Quantum.Preparation.PrepareChoiState
- summary: Bereitet den Status "Choi – jamiłkowski" für einen bestimmten Vorgang mit einer Adjoint-Variante auf angegebene Verweis-und Ziel Register vor.
  uid: Microsoft.Quantum.Preparation.PrepareChoiStateA
- summary: Bereitet den Status "Choi – jamiłkowski" für einen bestimmten Vorgang mit einer kontrollierten Variante auf angegebene Verweis-und Ziel Register vor.
  uid: Microsoft.Quantum.Preparation.PrepareChoiStateC
- summary: Bereitet den Status "Choi – jamiłkowski" für einen bestimmten Vorgang mit sowohl kontrollierten als auch Adjoint-Varianten auf angegebene Verweis-und Ziel Register vor.
  uid: Microsoft.Quantum.Preparation.PrepareChoiStateCA
- summary: >-
    Paar Weise entwinkel zwei Qubit-Register.

    Das heißt, wenn zwei Register vorhanden sind, wird der Status "$ \frac {1} {\sqrt {2} } \left (\ket {00} + \ket {11} \right) $" zwischen jedem Paar von Qubits in den entsprechenden Registern vorbereitet, wobei angenommen wird, dass jedes Register im Zustand "$ \ket{0\cdots 0} $" beginnt.
  uid: Microsoft.Quantum.Preparation.PrepareEntangledState
- summary: >-
    Bereitet bei einem Register das registrieren im Status "maximisch" vor.

    Das Register wird im Zustand $ \boldone/2 ^ N $ vorbereitet, indem der gesamte depolarisierungschannel auf die einzelnen Qubits angewendet wird, wobei $N $ die Länge des Registers ist.
  uid: Microsoft.Quantum.Preparation.PrepareIdentity
- summary: ''
  uid: Microsoft.Quantum.Preparation.PrepareQuantumROMState
- summary: >-
    Bereitet ein Qubit im + 1 ( `Zero` )-eigen Zustand des angegebenen Pauli-Operators vor. Wenn der Identity-Operator angegeben ist, wird das Qubit im Status "in maximalgemischter Form" vorbereitet.

    Wenn sich das Qubit anfänglich im $ \ket {0} $-Zustand befunden hat, bereitet dieser Vorgang das Qubit im $ + $1-eigen Zustand eines angegebenen Pauli-Operators bzw `PauliI` . für im Status "maximisch Mixed" (siehe <xref:microsoft.quantum.preparation.preparesinglequbitidentity> ) vor.

    Wenn sich das Qubit in einem anderen Zustand als $ \ket {0} $ befunden hat, wendet dieser Vorgang die folgenden Gates an: $H $ for `PauliX` , $HS $ for `PauliY` , $I $ for `PauliZ` und <xref:microsoft.quantum.preparation.preparesinglequbitidentity> for `PauliI` .
  uid: Microsoft.Quantum.Preparation.PrepareQubit
- summary: >-
    Bereitet ein Qubit im maximale gemischten Zustand vor.

    Sie bereitet das angegebene Qubit im Zustand "$ \boldone/$2" vor, indem der%% amp; quot;%% amp; quot;%% amp; quot; \omega (\rho) \mathrel{: =} \frac {1} {4} \ sum_ {\mu \ auf 0 festgelegt \{ wird. 1, 2, 3 \} } \sigma \_ {\mu} \rho \sigma \_ {\mu} ^ {\dagger}, \end{align} $ $, wobei $ \sigma \_ i $ der $i $ th-Pauli-Operator ist und $ \rho $ ein Dichte Operator ist, der einen gemischten Zustand darstellt.
  uid: Microsoft.Quantum.Preparation.PrepareSingleQubitIdentity
- summary: >-
    Erstellt eine einheitliche Superposition über Zustände, die 0 bis codieren `nIndices - 1` .

    Das heißt, dieser einheitliche $U $ erstellt eine einheitliche Superposition für alle Zahl Zustände $0 $ bis $M-$1, wenn ein Eingabe Status $ \ket{0\cdots 0} $ angegeben wird. Anders ausgedrückt: $ $ \begin{align} u\ket {0} = \frac {1} {\sqrt{m}}\ sum_ {j = 0} ^ {M-1} \ket{j}. \end{align} $ $.
  uid: Microsoft.Quantum.Preparation.PrepareUniformSuperposition
- summary: Implementierungs Schritt von <xref:microsoft.quantum.canon.prepareuniformsuperposition>
  uid: Microsoft.Quantum.Preparation.PrepareUniformSuperposition_
- summary: ''
  uid: Microsoft.Quantum.Preparation.WriteQuantumROMBitString
summary: Dieser Namespace enthält Funktionen und Vorgänge zum Vorbereiten von Qubits in beliebige anfängliche Zustände.
uid: Microsoft.Quantum.Preparation
metadata:
  ms.openlocfilehash: f8dc07d5fe1073f626eea41e6291d8cc919d93b6
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92723353"

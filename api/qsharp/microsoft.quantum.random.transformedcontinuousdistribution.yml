### YamlMime:QSharpType
uid: microsoft.quantum.random.transformedcontinuousdistribution
name: TransformedContinuousDistribution
type: function
namespace: Microsoft.Quantum.Random
summary: Gibt bei einer kontinuierlichen Verteilung eine neue Verteilung zurück, die den ursprünglichen durch eine angegebene Funktion transformiert.
examples: >-
  Die folgenden beiden Distributionen sind identisch:


  ```Q#

  let dist1 = ContinuousUniformDistribution(1.0, 2.0);

  let dist2 = TransformedContinuousDistribution(
      PlusD(1.0, _),
      ContinuousUniformDistribution(0.0, 1.0)
  );

  ```
syntax: 'function TransformedContinuousDistribution (transform : (Double -> Double), distribution : Microsoft.Quantum.Random.ContinuousDistribution) : Microsoft.Quantum.Random.ContinuousDistribution'
input:
  content: '(transform : (Double -> Double), distribution : Microsoft.Quantum.Random.ContinuousDistribution)'
  types:
  - name: transform
    summary: Eine Funktion, die variate der ursprünglichen Verteilung in die transformierte Verteilung umwandelt.
    isFunction: true
    input:
      types:
      - isPrimitive: true
        uid: Double
    output:
      types:
      - isPrimitive: true
        uid: Double
  - name: distribution
    summary: Die ursprüngliche Verteilung, die transformiert werden soll.
    uid: microsoft.quantum.random.continuousdistribution
output:
  content: Microsoft.Quantum.Random.ContinuousDistribution
  types:
  - summary: Eine neue Distribution, `distribution` die durch die durch angegebene Transformation verknüpft ist `transform` .
    uid: microsoft.quantum.random.continuousdistribution
metadata:
  ms.openlocfilehash: 033e852fa0c536d51a62b93c9cf71d03d2fcb959
  ms.sourcegitcommit: 75c4edc7c410cc63dc8352e2a5bef44b433ed188
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 08/25/2020
  ms.locfileid: "88864292"

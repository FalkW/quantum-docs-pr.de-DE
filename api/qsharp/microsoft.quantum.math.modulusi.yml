### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusi
name: ModulusI
type: function
namespace: microsoft.quantum.math
summary: Berechnet den kanonischen Rückstand von `value` Modulo `modulus` .
remarks: 'Diese Funktion verhält sich unterschiedlich, wie sich der Operator `%` in c# verhält, und f #, da im Ergebnis immer eine positive ganze Zahl zwischen 0 und ist `modulus - 1` , auch wenn der Wert negativ ist.'
syntax: 'function ModulusI (value : Int, modulus : Int) : Int'
input:
  content: '(value : Int, modulus : Int)'
  types:
  - name: value
    summary: Der Wert, von dem die Rückstände berechnet werden.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Der Modulo, nach dem die Rückstände übernommen werden, muss positiv sein.
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - summary: Ganzzahliger $r $ zwischen 0 und `modulus - 1` so, dass `value - r` durch Modulo teilbar ist
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 63d8e1ed1083be193b976ea7c4086f7bfdad7a69
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89334049"

### YamlMime:QSharpType
uid: microsoft.quantum.random.discreteuniformdistribution
name: DiscreteUniformDistribution
type: function
namespace: microsoft.quantum.random
summary: Gibt eine einheitliche Verteilung für einen angegebenen inklusiven Bereich zurück.
remarks: Schlägt fehl, wenn `max <= min` .
examples: >-
  Der folgende f #-Code Ausschnitt führt nach dem Zufallsprinzip zu einem sechsseitigen Würfel:


  ```Q#

  let dieDistribution = DiscreteUniformDistribution(1, 6);

  let dieRoll = dieDistribution::Sample();

  ```
syntax: 'function DiscreteUniformDistribution (min : Int, max : Int) : Microsoft.Quantum.Random.DiscreteDistribution'
input:
  content: '(min : Int, max : Int)'
  types:
  - name: min
    summary: Die kleinste Ganzzahl, die gezeichnet werden soll.
    isPrimitive: true
    uid: Int
  - name: max
    summary: Die größte Ganzzahl, die gezeichnet werden soll.
    isPrimitive: true
    uid: Int
output:
  content: Microsoft.Quantum.Random.DiscreteDistribution
  types:
  - summary: Eine Verteilung, deren zufällige variate ganze Zahlen im inklusiven Bereich von `min` bis `max` mit einheitlicher Wahrscheinlichkeit sind.
    uid: microsoft.quantum.random.discretedistribution
seeAlso:
- microsoft.quantum.drawrandomdouble
metadata:
  ms.openlocfilehash: c1e513b4cfd4ff79a991174203b79b2b430f7af9
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91466036"

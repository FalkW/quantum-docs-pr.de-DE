### YamlMime:QSharpType
uid: microsoft.quantum.logical.greaterthanl
name: GreaterThanL
type: function
namespace: microsoft.quantum.logical
summary: Gibt nur dann true zurück, wenn eine Zahl größer als eine andere Zahl ist.
remarks: >-
  Die folgenden sind gleichwertig:


  ```Q#

  let cond = a > b;

  let cond = GreaterThanL(a, b);

  ```
syntax: 'function GreaterThanL (a : BigInt, b : BigInt) : Bool'
input:
  content: '(a : BigInt, b : BigInt)'
  types:
  - name: a
    summary: Der erste zu vergleichende Wert.
    isPrimitive: true
    uid: BigInt
  - name: b
    summary: Der zweite zu vergleichende Wert.
    isPrimitive: true
    uid: BigInt
output:
  content: Bool
  types:
  - summary: '`true` , wenn und nur, wenn `a` streng größer als ist `b` .'
    isPrimitive: true
    uid: Bool
metadata:
  ms.openlocfilehash: 6db36fb5787acc4d37df2f9932965187fbf9f1d4
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91489713"
